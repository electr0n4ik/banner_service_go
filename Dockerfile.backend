
# Многоэтапная сборка для оптимизации размера
# FROM golang:1.24.4 AS builder
FROM mirror.gcr.io/golang:1.24.4 AS builder
WORKDIR /app
# Копируем go.mod и go.sum для кеширования зависимостей
COPY backend/go.mod backend/go.sum ./
RUN go mod download
# Копируем исходный код
COPY backend/ .
# Собираем приложение (исправляем путь)
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main ./cmd/main.go
# Финальный образ
FROM alpine:latest
RUN apk --no-cache add ca-certificates tzdata wget
WORKDIR /app/
# Копируем бинарник из builder
COPY --from=builder /app/main .
# Создаем пользователя для безопасности
RUN adduser -D -s /bin/sh appuser
RUN chown appuser:appuser /app/main
USER appuser
EXPOSE 8080
CMD ["./main"]
