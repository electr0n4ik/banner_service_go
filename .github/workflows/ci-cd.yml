name: CI

on: 
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: banners
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7
        ports: ["6379:6379"]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.4'
        
      - name: Initialize modules
        run: go mod tidy
        
      - name: Run tests
        run: |
          go test -v -coverprofile=coverage.out ./...
          go tool cover -func=coverage.out

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
    
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.4'
    
      - name: Initialize Go modules
        run: go mod tidy
      
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.55.2
          skip-cache: true
          args: --timeout=10m --verbose

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@v4
    
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.4'
        
      - name: Build Docker image
        run: docker build -t banner-service .
        