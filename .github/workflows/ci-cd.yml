name: CI

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: banners
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports: ["6379:6379"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.4"

      - name: Initialize Go modules
        run: |
          if [ ! -f go.mod ]; then
            go mod init banner_service_go
          fi
          go mod tidy

      - name: Run tests
        run: |
          go test -v -coverprofile=coverage.out ./...
          go tool cover -func=coverage.out

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.4"

      - name: Initialize Go modules
        run: |
          if [ ! -f go.mod ]; then
            go mod init banner_service_go
          fi
          go mod tidy

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.64.2

      - name: Run lint
        run: golangci-lint run --timeout=10m --verbose

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            [worker.oci]
              gc = true
              gckeepstorage = 0
          cleanup: true

      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.4"

      - name: Build Docker image
        run: docker build -t banner-service .
  # deploy:
  #   environment:
  #     name: banner_service_go # üëà –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º —ç—Ç–æ!
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v4
      
  #     - name: Copy files to server
  #       uses: appleboy/scp-action@master
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         port: ${{ secrets.SSH_PORT }}
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         source: "."
  #         target: "/home/userdev/go/src/banner_service_go"